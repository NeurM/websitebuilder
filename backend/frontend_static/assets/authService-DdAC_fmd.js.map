{"version":3,"file":"authService-DdAC_fmd.js","sources":["../../../src/utils/authService.ts"],"sourcesContent":["import { supabase } from '@/integrations/supabase/client';\nimport { logApiCall } from './apiLogger';\nimport { PostgrestError } from '@supabase/supabase-js';\n\n// Helper function to check Supabase initialization\nconst checkSupabase = () => {\n  if (!supabase) {\n    const error = new Error('Authentication service is not available. Please try again later.');\n    error.name = 'SupabaseInitError';\n    throw error;\n  }\n};\n\n// Auth functions\nexport const signUp = async (email: string, password: string) => {\n  try {\n    checkSupabase();\n\n    const response = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    \n    if (response.error) {\n      await logApiCall('/auth/sign-up', 'POST', { email }, null, response.error);\n      throw new Error(response.error.message || 'Failed to sign up');\n    }\n    \n    if (!response.data?.user) {\n      throw new Error('No user data received from sign up');\n    }\n    \n    await logApiCall('/auth/sign-up', 'POST', { email }, response.data, undefined);\n    return response;\n  } catch (error) {\n    const errorToLog = error instanceof Error ? error : new Error('Unknown error during sign up');\n    await logApiCall('/auth/sign-up', 'POST', { email }, null, errorToLog);\n    throw errorToLog;\n  }\n};\n\nexport const signIn = async (email: string, password: string) => {\n  try {\n    checkSupabase();\n\n    const response = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n    \n    if (response.error) {\n      await logApiCall('/auth/sign-in', 'POST', { email }, null, response.error);\n      throw new Error(response.error.message || 'Failed to sign in');\n    }\n    \n    if (!response.data?.user) {\n      throw new Error('No user data received from sign in');\n    }\n    \n    await logApiCall('/auth/sign-in', 'POST', { email }, response.data, undefined);\n    return response;\n  } catch (error) {\n    const errorToLog = error instanceof Error ? error : new Error('Unknown error during sign in');\n    await logApiCall('/auth/sign-in', 'POST', { email }, null, errorToLog);\n    throw errorToLog;\n  }\n};\n\nexport const signOut = async () => {\n  try {\n    checkSupabase();\n\n    const response = await supabase.auth.signOut();\n    \n    if (response.error) {\n      await logApiCall('/auth/sign-out', 'POST', null, null, response.error);\n      throw new Error(response.error.message || 'Failed to sign out');\n    }\n    \n    await logApiCall('/auth/sign-out', 'POST', null, response, undefined);\n    return response;\n  } catch (error) {\n    const errorToLog = error instanceof Error ? error : new Error('Unknown error during sign out');\n    await logApiCall('/auth/sign-out', 'POST', null, null, errorToLog);\n    throw errorToLog;\n  }\n};\n\nexport const getCurrentUser = async () => {\n  try {\n    checkSupabase();\n\n    const response = await supabase.auth.getUser();\n    \n    if (response.error) {\n      await logApiCall('/auth/user', 'GET', null, null, response.error);\n      throw new Error(response.error.message || 'Failed to get current user');\n    }\n    \n    if (!response.data?.user) {\n      return { data: { user: null } };\n    }\n    \n    await logApiCall('/auth/user', 'GET', null, response.data, undefined);\n    return response;\n  } catch (error) {\n    const errorToLog = error instanceof Error ? error : new Error('Unknown error getting current user');\n    await logApiCall('/auth/user', 'GET', null, null, errorToLog);\n    throw errorToLog;\n  }\n};\n"],"names":["checkSupabase","supabase","error","signUp","email","password","response","logApiCall","_a","errorToLog","signIn","getCurrentUser"],"mappings":"0CAKA,MAAMA,EAAgB,IAAM,CAC1B,GAAI,CAACC,EAAU,CACP,MAAAC,EAAQ,IAAI,MAAM,kEAAkE,EAC1F,MAAAA,EAAM,KAAO,oBACPA,CACR,CACF,EAGaC,EAAS,MAAOC,EAAeC,IAAqB,OAC3D,GAAA,CACYL,IAEd,MAAMM,EAAW,MAAML,EAAS,KAAK,OAAO,CAC1C,MAAAG,EACA,SAAAC,CAAA,CACD,EAED,GAAIC,EAAS,MACL,YAAAC,EAAW,gBAAiB,OAAQ,CAAE,MAAAH,GAAS,KAAME,EAAS,KAAK,EACnE,IAAI,MAAMA,EAAS,MAAM,SAAW,mBAAmB,EAG3D,GAAA,GAACE,EAAAF,EAAS,OAAT,MAAAE,EAAe,MACZ,MAAA,IAAI,MAAM,oCAAoC,EAGhD,aAAAD,EAAW,gBAAiB,OAAQ,CAAE,MAAAH,CAAS,EAAAE,EAAS,KAAM,MAAS,EACtEA,QACAJ,EAAO,CACd,MAAMO,EAAaP,aAAiB,MAAQA,EAAQ,IAAI,MAAM,8BAA8B,EAC5F,YAAMK,EAAW,gBAAiB,OAAQ,CAAE,MAAAH,GAAS,KAAMK,CAAU,EAC/DA,CACR,CACF,EAEaC,EAAS,MAAON,EAAeC,IAAqB,OAC3D,GAAA,CACYL,IAEd,MAAMM,EAAW,MAAML,EAAS,KAAK,mBAAmB,CACtD,MAAAG,EACA,SAAAC,CAAA,CACD,EAED,GAAIC,EAAS,MACL,YAAAC,EAAW,gBAAiB,OAAQ,CAAE,MAAAH,GAAS,KAAME,EAAS,KAAK,EACnE,IAAI,MAAMA,EAAS,MAAM,SAAW,mBAAmB,EAG3D,GAAA,GAACE,EAAAF,EAAS,OAAT,MAAAE,EAAe,MACZ,MAAA,IAAI,MAAM,oCAAoC,EAGhD,aAAAD,EAAW,gBAAiB,OAAQ,CAAE,MAAAH,CAAS,EAAAE,EAAS,KAAM,MAAS,EACtEA,QACAJ,EAAO,CACd,MAAMO,EAAaP,aAAiB,MAAQA,EAAQ,IAAI,MAAM,8BAA8B,EAC5F,YAAMK,EAAW,gBAAiB,OAAQ,CAAE,MAAAH,GAAS,KAAMK,CAAU,EAC/DA,CACR,CACF,EAsBaE,EAAiB,SAAY,OACpC,GAAA,CACYX,IAEd,MAAMM,EAAW,MAAML,EAAS,KAAK,QAAQ,EAE7C,GAAIK,EAAS,MACX,YAAMC,EAAW,aAAc,MAAO,KAAM,KAAMD,EAAS,KAAK,EAC1D,IAAI,MAAMA,EAAS,MAAM,SAAW,4BAA4B,EAGpE,OAACE,EAAAF,EAAS,OAAT,MAAAE,EAAe,MAIpB,MAAMD,EAAW,aAAc,MAAO,KAAMD,EAAS,KAAM,MAAS,EAC7DA,GAJE,CAAE,KAAM,CAAE,KAAM,IAAO,CAAA,QAKzBJ,EAAO,CACd,MAAMO,EAAaP,aAAiB,MAAQA,EAAQ,IAAI,MAAM,oCAAoC,EAClG,YAAMK,EAAW,aAAc,MAAO,KAAM,KAAME,CAAU,EACtDA,CACR,CACF"}