{"version":3,"file":"Auth-40Jx8X_t.js","sources":["../../../src/templates/tradecraft/Auth.tsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { signIn, signUp, getCurrentUser } from \"@/utils/supabase\";\n\nconst TradecraftAuth = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const navItems = [\n    { name: \"Home\", path: \"/tradecraft\" },\n    { name: \"About\", path: \"/tradecraft/about\" },\n    { name: \"Services\", path: \"/tradecraft/services\" },\n    { name: \"Blog\", path: \"/tradecraft/blog\" },\n    { name: \"Contact\", path: \"/tradecraft/contact\" },\n  ];\n  \n  const contactInfo = {\n    address: \"123 Trade Street, Tradeville, TV 12345\",\n    phone: \"(555) 456-7890\",\n    email: \"info@tradecraft.com\",\n  };\n\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n  \n  const [registerForm, setRegisterForm] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkAuth = async () => {\n      const { data } = await getCurrentUser();\n      if (data.user) {\n        navigate('/tradecraft');\n      }\n    };\n    \n    checkAuth();\n  }, [navigate]);\n\n  const handleLoginSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      const { data, error } = await signIn(loginForm.email, loginForm.password);\n      \n      if (error) {\n        toast({\n          title: \"Login Failed\",\n          description: error.message,\n          variant: \"destructive\"\n        });\n      } else if (data) {\n        toast({\n          title: \"Login Successful\",\n          description: \"Welcome back!\"\n        });\n        navigate('/tradecraft');\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      toast({\n        title: \"Login Failed\",\n        description: \"An unexpected error occurred\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleRegisterSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (registerForm.password !== registerForm.confirmPassword) {\n      toast({\n        title: \"Registration Failed\",\n        description: \"Passwords do not match\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      const { data, error } = await signUp(registerForm.email, registerForm.password);\n      \n      if (error) {\n        toast({\n          title: \"Registration Failed\",\n          description: error.message,\n          variant: \"destructive\"\n        });\n      } else {\n        toast({\n          title: \"Registration Successful\",\n          description: \"Check your email for a confirmation link to complete your registration.\"\n        });\n        \n        // In development, users might want to proceed without email confirmation\n        if (data?.user && !data.session) {\n          toast({\n            title: \"Note\",\n            description: \"For development, you might want to disable email confirmation in the Supabase dashboard.\"\n          });\n        }\n        \n        if (data?.session) {\n          navigate('/tradecraft');\n        }\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      toast({\n        title: \"Registration Failed\",\n        description: \"An unexpected error occurred\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      <Navbar \n        logo=\"Trade<span class='text-blue-600'>Craft</span>\" \n        basePath=\"tradecraft\"\n        navItems={navItems}\n      />\n      \n      <div className=\"flex-grow\">\n        <div className=\"container mx-auto px-6 py-16\">\n          <h1 className=\"text-3xl font-bold text-center mb-10\">Account Access</h1>\n          \n          <div className=\"max-w-md mx-auto\">\n            <Card>\n              <CardHeader className=\"text-center\">\n                <CardTitle className=\"text-2xl font-bold\">Welcome</CardTitle>\n                <CardDescription>Sign in or create an account to access TradeCraft services</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Tabs defaultValue=\"login\" className=\"w-full\">\n                  <TabsList className=\"grid w-full grid-cols-2 mb-8\">\n                    <TabsTrigger value=\"login\">Login</TabsTrigger>\n                    <TabsTrigger value=\"register\">Register</TabsTrigger>\n                  </TabsList>\n                  \n                  <TabsContent value=\"login\">\n                    <form onSubmit={handleLoginSubmit} className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"login-email\">Email</Label>\n                        <Input \n                          id=\"login-email\" \n                          type=\"email\" \n                          placeholder=\"your@email.com\" \n                          value={loginForm.email}\n                          onChange={(e) => setLoginForm({...loginForm, email: e.target.value})}\n                          required\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"login-password\">Password</Label>\n                        <Input \n                          id=\"login-password\" \n                          type=\"password\" \n                          value={loginForm.password}\n                          onChange={(e) => setLoginForm({...loginForm, password: e.target.value})}\n                          required\n                        />\n                      </div>\n                      <Button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700\" disabled={isLoading}>\n                        {isLoading ? \"Signing in...\" : \"Sign In\"}\n                      </Button>\n                    </form>\n                  </TabsContent>\n                  \n                  <TabsContent value=\"register\">\n                    <form onSubmit={handleRegisterSubmit} className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"register-email\">Email</Label>\n                        <Input \n                          id=\"register-email\" \n                          type=\"email\" \n                          placeholder=\"your@email.com\" \n                          value={registerForm.email}\n                          onChange={(e) => setRegisterForm({...registerForm, email: e.target.value})}\n                          required\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"register-password\">Password</Label>\n                        <Input \n                          id=\"register-password\" \n                          type=\"password\" \n                          value={registerForm.password}\n                          onChange={(e) => setRegisterForm({...registerForm, password: e.target.value})}\n                          required\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"register-confirm-password\">Confirm Password</Label>\n                        <Input \n                          id=\"register-confirm-password\" \n                          type=\"password\" \n                          value={registerForm.confirmPassword}\n                          onChange={(e) => setRegisterForm({...registerForm, confirmPassword: e.target.value})}\n                          required\n                        />\n                      </div>\n                      <Button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700\" disabled={isLoading}>\n                        {isLoading ? \"Creating account...\" : \"Create Account\"}\n                      </Button>\n                    </form>\n                  </TabsContent>\n                </Tabs>\n                \n                <div className=\"mt-6 text-center\">\n                  <Button variant=\"outline\" onClick={() => navigate('/tradecraft')} className=\"w-full\">\n                    Back to TradeCraft\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n      \n      <Footer \n        logo=\"TradeCraft\"\n        description=\"Your trusted partner for professional trade services.\"\n        basePath=\"tradecraft\"\n        navItems={navItems}\n        contactInfo={contactInfo}\n      />\n    </div>\n  );\n};\n\nexport default TradecraftAuth;\n"],"names":["TradecraftAuth","navigate","useNavigate","useLocation","toast","useToast","isLoading","setIsLoading","useState","navItems","contactInfo","loginForm","setLoginForm","registerForm","setRegisterForm","useEffect","data","getCurrentUser","handleLoginSubmit","e","error","signIn","handleRegisterSubmit","signUp","jsxs","jsx","Navbar","Card","CardHeader","CardTitle","CardDescription","CardContent","Tabs","TabsList","TabsTrigger","TabsContent","Label","Input","Button","Footer"],"mappings":"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"}