# Generated by Django 4.2.7 on 2025-05-27 13:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tenants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PreviewEmail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipient_email", models.EmailField(max_length=254)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("preview_url", models.URLField()),
            ],
            options={
                "ordering": ["-sent_at"],
            },
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("thumbnail_url", models.URLField()),
                ("preview_url", models.URLField()),
                ("category", models.CharField(max_length=100)),
                ("features", models.JSONField(default=list)),
                ("is_premium", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="WebsiteConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=255)),
                ("domain_name", models.CharField(max_length=255, unique=True)),
                ("logo", models.URLField(blank=True, null=True)),
                (
                    "color_scheme",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "secondary_color_scheme",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "deployment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("deployment_url", models.URLField(blank=True, null=True)),
                ("last_deployed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "google_analytics_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "google_tag_manager_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "facebook_pixel_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("custom_analytics_script", models.TextField(blank=True, null=True)),
                ("cookie_enabled", models.BooleanField(default=True)),
                (
                    "cookie_banner_text",
                    models.TextField(
                        default="We use cookies to enhance your experience."
                    ),
                ),
                (
                    "cookie_accept_button_text",
                    models.CharField(default="Accept All", max_length=50),
                ),
                (
                    "cookie_decline_button_text",
                    models.CharField(default="Decline All", max_length=50),
                ),
                ("cookie_policy_url", models.URLField(blank=True, null=True)),
                ("cookie_duration", models.IntegerField(default=365)),
                ("cookie_categories", models.JSONField(default=dict)),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="websites.template",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Website",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("template", models.CharField(max_length=100)),
                ("content", models.JSONField(default=dict)),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "supabase_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("supabase_url", models.URLField(blank=True, null=True)),
                ("settings", models.JSONField(blank=True, default=dict)),
                ("meta_title", models.CharField(blank=True, max_length=100)),
                ("meta_description", models.TextField(blank=True)),
                ("meta_keywords", models.CharField(blank=True, max_length=200)),
                ("facebook_url", models.URLField(blank=True)),
                ("twitter_url", models.URLField(blank=True)),
                ("instagram_url", models.URLField(blank=True)),
                ("linkedin_url", models.URLField(blank=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="websites",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Website",
                "verbose_name_plural": "Websites",
                "unique_together": {("tenant", "slug")},
            },
        ),
        migrations.CreateModel(
            name="PreviewEmailTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opened_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                (
                    "preview_email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trackers",
                        to="websites.previewemail",
                    ),
                ),
            ],
            options={
                "ordering": ["-opened_at"],
            },
        ),
        migrations.AddField(
            model_name="previewemail",
            name="website",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="preview_emails",
                to="websites.website",
            ),
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("content", models.TextField()),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pages",
                        to="websites.website",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BulkWebsiteCreator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_names", models.JSONField()),
                ("domain_names", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="websites.template",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
